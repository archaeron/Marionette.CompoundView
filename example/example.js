// Generated by CoffeeScript 1.7.1
(function() {
  var Collection, ItemView, ListCompositeView, ListItemView, Model, MyApp, cV, collection,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.showNumber = function(nStr) {
    var rgx, x, x1, x2;
    nStr += '';
    x = nStr.split('.');
    x1 = x[0];
    x2 = x.length > 1 ? '.' + x[1] : '';
    rgx = /(\d+)(\d{3})/;
    while (rgx.test(x1)) {
      x1 = x1.replace(rgx, '$1' + "'" + '$2');
    }
    return x1 + x2;
  };

  MyApp = new Backbone.Marionette.Application();

  MyApp.addRegions({
    compoundViewContainer: "#compound-view-container"
  });

  ListItemView = (function(_super) {
    __extends(ListItemView, _super);

    function ListItemView() {
      return ListItemView.__super__.constructor.apply(this, arguments);
    }

    ListItemView.prototype.tagName = 'li';

    ListItemView.prototype.className = 'list-group-item';

    ListItemView.prototype.template = '#list-item-view';

    ListItemView.prototype.initialize = function() {
      this.listenTo(this, 'list-element:selected', this.selected);
      return this.listenTo(this, 'list-element:unselected', this.unselected);
    };

    ListItemView.prototype.selected = function() {
      return this.$el.addClass('selected');
    };

    ListItemView.prototype.unselected = function() {
      return this.$el.removeClass('selected');
    };

    return ListItemView;

  })(Backbone.Marionette.ItemView);

  ListCompositeView = (function(_super) {
    __extends(ListCompositeView, _super);

    function ListCompositeView() {
      return ListCompositeView.__super__.constructor.apply(this, arguments);
    }

    ListCompositeView.prototype.itemView = ListItemView;

    ListCompositeView.prototype.template = '#list-view';

    ListCompositeView.prototype.itemViewContainer = ".list";

    return ListCompositeView;

  })(Backbone.Marionette.CompositeView);

  ItemView = (function(_super) {
    __extends(ItemView, _super);

    function ItemView() {
      return ItemView.__super__.constructor.apply(this, arguments);
    }

    ItemView.prototype.template = '#item-view';

    ItemView.prototype.className = 'panel panel-default';

    return ItemView;

  })(Backbone.Marionette.ItemView);

  Model = (function(_super) {
    __extends(Model, _super);

    function Model() {
      return Model.__super__.constructor.apply(this, arguments);
    }

    return Model;

  })(Backbone.Model);

  Collection = (function(_super) {
    __extends(Collection, _super);

    function Collection() {
      return Collection.__super__.constructor.apply(this, arguments);
    }

    Collection.prototype.model = Model;

    Collection.prototype.comparator = function(model) {
      return model.get('name');
    };

    return Collection;

  })(Backbone.Collection);

  window.c = collection = new Collection([
    {
      name: 'Australia',
      population: 22.68e6,
      landArea: 7.618e6
    }, {
      name: 'Switzerland',
      population: 7.997e6,
      landArea: 39997
    }, {
      name: 'Italy',
      population: 60.92e6,
      landArea: 294140
    }, {
      name: 'Argentina',
      population: 41.09e6,
      landArea: 2.737e6
    }, {
      name: 'South Korea',
      population: 48.8e6,
      landArea: 98190
    }
  ]);

  cV = new Marionette.CompoundView({
    listView: ListCompositeView,
    itemView: ItemView,
    collection: collection,
    template: '#compound-view',
    breakWidth: 750
  });

  console.log(cV);

  $(document).ready(function() {
    return MyApp.compoundViewContainer.show(cV);
  });

}).call(this);

//# sourceMappingURL=example.map
